import { client } from "../../lib/client";
import 'tailwindcss/tailwind.css'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import React from "react";
import Head from "next/head";
import { faAngleDoubleRight } from "@fortawesome/free-solid-svg-icons";

export default function BlogId({ blog }) {
  return (
    <section className="text-gray-600 body-font">
    <div className="container px-5 py-24 mx-auto">

        <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        </Head>
    <main>
        <div className="flex flex-wrap -mx-4 -mb-10">
        <div className="prose sm:w-1/2 mb-10 px-4 .text-left">
            <h1 className="itle-font text-2xl font-medium text-gray-900 mt-6 mb-3">
                <FontAwesomeIcon icon={faAngleDoubleRight} className="mr-2"/>{blog.title}
            </h1>
            {/* <p>{blog.publishedAt}</p> */}
            <div
                dangerouslySetInnerHTML={{
                  __html: `${blog.body}`,
                }}/>
        </div>

        </div>
    </main>
    </div>
    </section>
  );
}

// 静的生成のためのパスを指定します
export const getStaticPaths = async () => {
  const data = await client.get({ endpoint: "blog" });

  const paths = data.contents.map((content) => `/blog/${content.id}`);
  return { paths, fallback: false };
};

// データをテンプレートに受け渡す部分の処理を記述します
export const getStaticProps = async (context) => {
  const id = context.params.id;
  const data = await client.get({ endpoint: "blog", contentId: id });

  return {
    props: {
      blog: data,
    },
  };
};